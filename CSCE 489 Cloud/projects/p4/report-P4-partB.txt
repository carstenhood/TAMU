Carsten Hood
UIN: 922009787
CSCE 489-599 Cloud Computing
Fall 2017

Project 4 Part B Report

==========================

ASSIGNMENT
• Took 4 hours to implement this part.
• Turning in by early-bird deadline for extra credit.

GITHUB
• Part B Timestamp: 2017/12/02 ~12:04:25 PM
• GitHub URL: https://github.tamu.edu/carstenhood/489-17-c/commit/0a79694a392c06cb6c53d98bab27d5581b972b22

GENERAL NOTES
• To build/run simply execute aggiestack.py: $ python aggiestack.py
• The program is meant to accept multiple commands in a single run and isn’t persistent.
• Program should accomodate all input errors.
• All commands are logged in aggiestack-log.txt, which saves when the program closes.

GENERAL DESIGN
• Program is centered around a main loop that processes each user command and calls the relevant function. Each function returns True if completed successfully or otherwise returns False and prints a relevant error statement. This True/False return value is used to log the successfulness of each command/function.
• Instance objects are contained by Machine objects, and Machine objects are contained by Rack objects. These containers hold the only references to these objects. Only the container of Rack objects is global. This simplifies Part B operations (evacuating a rack and adding/removing a machine). Simply iterate across these containers to locate and handle the relevant object.

==========================
DESIGN (FOR EACH COMMAND)

$ aggiestack admin evacuate RACK_NAME
• Find rack with name, iterate through its machines and instances and attempt to migrate each one to a different rack's machine.
• If there aren't resources to evacuate an instance then it is logged and skipped and evacuation of other instances continues. 
• The evacuated rack isn't removed from the system (since this isn't specified in the assignment). Hence instances may still be added to a rack after an evacuation call.
• Log as FAILURE if no desired rack cannot be found or no instances can be migrated from the rack.

$ aggiestack admin remove MACHINE
• Cycle through racks to find the machine, and delete the machine from its rack.
• Any instances running on the machine-to-be-removed are deleted (since handling them isn't specified in the assignment).
• Log as FAILURE if desired machine isn't found.

$ aggiestack admin add –-mem MEM – disk NUM_DISKS –vcpus VCPUs –ip IP –rack RACK_NAME MACHINE
• Check that the machine's name is unique, find the desired rack, instantiate the machine with the given resources, and add the machine to the rack.
• Log as FAILURE if machine's name isn't unique or rack name isn't found.
